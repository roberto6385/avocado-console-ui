// source: auth.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.proto.auth.LoginRequest', null, global);
goog.exportSymbol('proto.proto.auth.LoginResponse', null, global);
goog.exportSymbol('proto.proto.auth.LogoutRequest', null, global);
goog.exportSymbol('proto.proto.auth.LogoutResponse', null, global);
goog.exportSymbol('proto.proto.auth.Message', null, global);
goog.exportSymbol('proto.proto.auth.Message.TypeCase', null, global);
goog.exportSymbol('proto.proto.auth.Request', null, global);
goog.exportSymbol('proto.proto.auth.Request.RequestCase', null, global);
goog.exportSymbol('proto.proto.auth.Response', null, global);
goog.exportSymbol('proto.proto.auth.Response.ResponseCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial resourceGroupId array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in placeholder and becomes part of the constructed object. It is not cloned.
 * If no resourceGroupId is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.auth.Message = function (opt_data) {
	jspb.Message.initialize(
		this,
		opt_data,
		0,
		-1,
		null,
		proto.proto.auth.Message.oneofGroups_,
	);
};
goog.inherits(proto.proto.auth.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.proto.auth.Message.displayName = 'proto.proto.auth.Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial resourceGroupId array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in placeholder and becomes part of the constructed object. It is not cloned.
 * If no resourceGroupId is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.auth.Request = function (opt_data) {
	jspb.Message.initialize(
		this,
		opt_data,
		0,
		-1,
		null,
		proto.proto.auth.Request.oneofGroups_,
	);
};
goog.inherits(proto.proto.auth.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.proto.auth.Request.displayName = 'proto.proto.auth.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial resourceGroupId array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in placeholder and becomes part of the constructed object. It is not cloned.
 * If no resourceGroupId is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.auth.LoginRequest = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.auth.LoginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.proto.auth.LoginRequest.displayName = 'proto.proto.auth.LoginRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial resourceGroupId array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in placeholder and becomes part of the constructed object. It is not cloned.
 * If no resourceGroupId is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.auth.LogoutRequest = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.auth.LogoutRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.proto.auth.LogoutRequest.displayName =
		'proto.proto.auth.LogoutRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial resourceGroupId array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in placeholder and becomes part of the constructed object. It is not cloned.
 * If no resourceGroupId is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.auth.Response = function (opt_data) {
	jspb.Message.initialize(
		this,
		opt_data,
		0,
		-1,
		null,
		proto.proto.auth.Response.oneofGroups_,
	);
};
goog.inherits(proto.proto.auth.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.proto.auth.Response.displayName = 'proto.proto.auth.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial resourceGroupId array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in placeholder and becomes part of the constructed object. It is not cloned.
 * If no resourceGroupId is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.auth.LoginResponse = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.auth.LoginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.proto.auth.LoginResponse.displayName =
		'proto.proto.auth.LoginResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial resourceGroupId array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in placeholder and becomes part of the constructed object. It is not cloned.
 * If no resourceGroupId is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.auth.LogoutResponse = function (opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.auth.LogoutResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
	 * @public
	 * @override
	 */
	proto.proto.auth.LogoutResponse.displayName =
		'proto.proto.auth.LogoutResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.proto.auth.Message.oneofGroups_ = [[1, 2]];

/**
 * @enum {number}
 */
proto.proto.auth.Message.TypeCase = {
	TYPE_NOT_SET: 0,
	REQUEST: 1,
	RESPONSE: 2,
};

/**
 * @return {proto.proto.auth.Message.TypeCase}
 */
proto.proto.auth.Message.prototype.getTypeCase = function () {
	return /** @type {proto.proto.auth.Message.TypeCase} */ (
		jspb.Message.computeOneofCase(
			this,
			proto.proto.auth.Message.oneofGroups_[0],
		)
	);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.proto.auth.Message.prototype.toObject = function (
		opt_includeInstance,
	) {
		return proto.proto.auth.Message.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.proto.auth.Message} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.proto.auth.Message.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				request:
					(f = msg.getRequest()) &&
					proto.proto.auth.Request.toObject(includeInstance, f),
				response:
					(f = msg.getResponse()) &&
					proto.proto.auth.Response.toObject(includeInstance, f),
				version: jspb.Message.getFieldWithDefault(msg, 3, ''),
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary resourceGroupId (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.auth.Message}
 */
proto.proto.auth.Message.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.proto.auth.Message();
	return proto.proto.auth.Message.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary resourceGroupId (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.auth.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.auth.Message}
 */
proto.proto.auth.Message.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = new proto.proto.auth.Request();
				reader.readMessage(
					value,
					proto.proto.auth.Request.deserializeBinaryFromReader,
				);
				msg.setRequest(value);
				break;
			case 2:
				var value = new proto.proto.auth.Response();
				reader.readMessage(
					value,
					proto.proto.auth.Response.deserializeBinaryFromReader,
				);
				msg.setResponse(value);
				break;
			case 3:
				var value = /** @type {string} */ (reader.readString());
				msg.setVersion(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary resourceGroupId (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.auth.Message.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.proto.auth.Message.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary resourceGroupId (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.auth.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.auth.Message.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getRequest();
	if (f != null) {
		writer.writeMessage(
			1,
			f,
			proto.proto.auth.Request.serializeBinaryToWriter,
		);
	}
	f = message.getResponse();
	if (f != null) {
		writer.writeMessage(
			2,
			f,
			proto.proto.auth.Response.serializeBinaryToWriter,
		);
	}
	f = message.getVersion();
	if (f.length > 0) {
		writer.writeString(3, f);
	}
};

/**
 * optional Request request = 1;
 * @return {?proto.proto.auth.Request}
 */
proto.proto.auth.Message.prototype.getRequest = function () {
	return /** @type{?proto.proto.auth.Request} */ (
		jspb.Message.getWrapperField(this, proto.proto.auth.Request, 1)
	);
};

/**
 * @param {?proto.proto.auth.Request|undefined} value
 * @return {!proto.proto.auth.Message} returns this
 */
proto.proto.auth.Message.prototype.setRequest = function (value) {
	return jspb.Message.setOneofWrapperField(
		this,
		1,
		proto.proto.auth.Message.oneofGroups_[0],
		value,
	);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.auth.Message} returns this
 */
proto.proto.auth.Message.prototype.clearRequest = function () {
	return this.setRequest(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.auth.Message.prototype.hasRequest = function () {
	return jspb.Message.getField(this, 1) != null;
};

/**
 * optional Response response = 2;
 * @return {?proto.proto.auth.Response}
 */
proto.proto.auth.Message.prototype.getResponse = function () {
	return /** @type{?proto.proto.auth.Response} */ (
		jspb.Message.getWrapperField(this, proto.proto.auth.Response, 2)
	);
};

/**
 * @param {?proto.proto.auth.Response|undefined} value
 * @return {!proto.proto.auth.Message} returns this
 */
proto.proto.auth.Message.prototype.setResponse = function (value) {
	return jspb.Message.setOneofWrapperField(
		this,
		2,
		proto.proto.auth.Message.oneofGroups_[0],
		value,
	);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.auth.Message} returns this
 */
proto.proto.auth.Message.prototype.clearResponse = function () {
	return this.setResponse(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.auth.Message.prototype.hasResponse = function () {
	return jspb.Message.getField(this, 2) != null;
};

/**
 * optional string version = 3;
 * @return {string}
 */
proto.proto.auth.Message.prototype.getVersion = function () {
	return /** @type {string} */ (
		jspb.Message.getFieldWithDefault(this, 3, '')
	);
};

/**
 * @param {string} value
 * @return {!proto.proto.auth.Message} returns this
 */
proto.proto.auth.Message.prototype.setVersion = function (value) {
	return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.proto.auth.Request.oneofGroups_ = [[1, 2]];

/**
 * @enum {number}
 */
proto.proto.auth.Request.RequestCase = {
	REQUEST_NOT_SET: 0,
	LOGIN: 1,
	LOGOUT: 2,
};

/**
 * @return {proto.proto.auth.Request.RequestCase}
 */
proto.proto.auth.Request.prototype.getRequestCase = function () {
	return /** @type {proto.proto.auth.Request.RequestCase} */ (
		jspb.Message.computeOneofCase(
			this,
			proto.proto.auth.Request.oneofGroups_[0],
		)
	);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.proto.auth.Request.prototype.toObject = function (
		opt_includeInstance,
	) {
		return proto.proto.auth.Request.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.proto.auth.Request} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.proto.auth.Request.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				login:
					(f = msg.getLogin()) &&
					proto.proto.auth.LoginRequest.toObject(includeInstance, f),
				logout:
					(f = msg.getLogout()) &&
					proto.proto.auth.LogoutRequest.toObject(includeInstance, f),
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary resourceGroupId (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.auth.Request}
 */
proto.proto.auth.Request.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.proto.auth.Request();
	return proto.proto.auth.Request.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary resourceGroupId (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.auth.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.auth.Request}
 */
proto.proto.auth.Request.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = new proto.proto.auth.LoginRequest();
				reader.readMessage(
					value,
					proto.proto.auth.LoginRequest.deserializeBinaryFromReader,
				);
				msg.setLogin(value);
				break;
			case 2:
				var value = new proto.proto.auth.LogoutRequest();
				reader.readMessage(
					value,
					proto.proto.auth.LogoutRequest.deserializeBinaryFromReader,
				);
				msg.setLogout(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary resourceGroupId (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.auth.Request.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.proto.auth.Request.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary resourceGroupId (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.auth.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.auth.Request.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getLogin();
	if (f != null) {
		writer.writeMessage(
			1,
			f,
			proto.proto.auth.LoginRequest.serializeBinaryToWriter,
		);
	}
	f = message.getLogout();
	if (f != null) {
		writer.writeMessage(
			2,
			f,
			proto.proto.auth.LogoutRequest.serializeBinaryToWriter,
		);
	}
};

/**
 * optional LoginRequest login = 1;
 * @return {?proto.proto.auth.LoginRequest}
 */
proto.proto.auth.Request.prototype.getLogin = function () {
	return /** @type{?proto.proto.auth.LoginRequest} */ (
		jspb.Message.getWrapperField(this, proto.proto.auth.LoginRequest, 1)
	);
};

/**
 * @param {?proto.proto.auth.LoginRequest|undefined} value
 * @return {!proto.proto.auth.Request} returns this
 */
proto.proto.auth.Request.prototype.setLogin = function (value) {
	return jspb.Message.setOneofWrapperField(
		this,
		1,
		proto.proto.auth.Request.oneofGroups_[0],
		value,
	);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.auth.Request} returns this
 */
proto.proto.auth.Request.prototype.clearLogin = function () {
	return this.setLogin(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.auth.Request.prototype.hasLogin = function () {
	return jspb.Message.getField(this, 1) != null;
};

/**
 * optional LogoutRequest logout = 2;
 * @return {?proto.proto.auth.LogoutRequest}
 */
proto.proto.auth.Request.prototype.getLogout = function () {
	return /** @type{?proto.proto.auth.LogoutRequest} */ (
		jspb.Message.getWrapperField(this, proto.proto.auth.LogoutRequest, 2)
	);
};

/**
 * @param {?proto.proto.auth.LogoutRequest|undefined} value
 * @return {!proto.proto.auth.Request} returns this
 */
proto.proto.auth.Request.prototype.setLogout = function (value) {
	return jspb.Message.setOneofWrapperField(
		this,
		2,
		proto.proto.auth.Request.oneofGroups_[0],
		value,
	);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.auth.Request} returns this
 */
proto.proto.auth.Request.prototype.clearLogout = function () {
	return this.setLogout(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.auth.Request.prototype.hasLogout = function () {
	return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.proto.auth.LoginRequest.prototype.toObject = function (
		opt_includeInstance,
	) {
		return proto.proto.auth.LoginRequest.toObject(
			opt_includeInstance,
			this,
		);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.proto.auth.LoginRequest} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.proto.auth.LoginRequest.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				user: jspb.Message.getFieldWithDefault(msg, 1, ''),
				password: jspb.Message.getFieldWithDefault(msg, 2, ''),
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary resourceGroupId (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.auth.LoginRequest}
 */
proto.proto.auth.LoginRequest.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.proto.auth.LoginRequest();
	return proto.proto.auth.LoginRequest.deserializeBinaryFromReader(
		msg,
		reader,
	);
};

/**
 * Deserializes binary resourceGroupId (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.auth.LoginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.auth.LoginRequest}
 */
proto.proto.auth.LoginRequest.deserializeBinaryFromReader = function (
	msg,
	reader,
) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setUser(value);
				break;
			case 2:
				var value = /** @type {string} */ (reader.readString());
				msg.setPassword(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary resourceGroupId (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.auth.LoginRequest.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.proto.auth.LoginRequest.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary resourceGroupId (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.auth.LoginRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.auth.LoginRequest.serializeBinaryToWriter = function (
	message,
	writer,
) {
	var f = undefined;
	f = message.getUser();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
	f = message.getPassword();
	if (f.length > 0) {
		writer.writeString(2, f);
	}
};

/**
 * optional string user = 1;
 * @return {string}
 */
proto.proto.auth.LoginRequest.prototype.getUser = function () {
	return /** @type {string} */ (
		jspb.Message.getFieldWithDefault(this, 1, '')
	);
};

/**
 * @param {string} value
 * @return {!proto.proto.auth.LoginRequest} returns this
 */
proto.proto.auth.LoginRequest.prototype.setUser = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string password = 2;
 * @return {string}
 */
proto.proto.auth.LoginRequest.prototype.getPassword = function () {
	return /** @type {string} */ (
		jspb.Message.getFieldWithDefault(this, 2, '')
	);
};

/**
 * @param {string} value
 * @return {!proto.proto.auth.LoginRequest} returns this
 */
proto.proto.auth.LoginRequest.prototype.setPassword = function (value) {
	return jspb.Message.setProto3StringField(this, 2, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.proto.auth.LogoutRequest.prototype.toObject = function (
		opt_includeInstance,
	) {
		return proto.proto.auth.LogoutRequest.toObject(
			opt_includeInstance,
			this,
		);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.proto.auth.LogoutRequest} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.proto.auth.LogoutRequest.toObject = function (includeInstance, msg) {
		var f,
			obj = {};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary resourceGroupId (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.auth.LogoutRequest}
 */
proto.proto.auth.LogoutRequest.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.proto.auth.LogoutRequest();
	return proto.proto.auth.LogoutRequest.deserializeBinaryFromReader(
		msg,
		reader,
	);
};

/**
 * Deserializes binary resourceGroupId (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.auth.LogoutRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.auth.LogoutRequest}
 */
proto.proto.auth.LogoutRequest.deserializeBinaryFromReader = function (
	msg,
	reader,
) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary resourceGroupId (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.auth.LogoutRequest.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.proto.auth.LogoutRequest.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary resourceGroupId (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.auth.LogoutRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.auth.LogoutRequest.serializeBinaryToWriter = function (
	message,
	writer,
) {
	var f = undefined;
};

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.proto.auth.Response.oneofGroups_ = [[1, 2]];

/**
 * @enum {number}
 */
proto.proto.auth.Response.ResponseCase = {
	RESPONSE_NOT_SET: 0,
	LOGIN: 1,
	LOGOUT: 2,
};

/**
 * @return {proto.proto.auth.Response.ResponseCase}
 */
proto.proto.auth.Response.prototype.getResponseCase = function () {
	return /** @type {proto.proto.auth.Response.ResponseCase} */ (
		jspb.Message.computeOneofCase(
			this,
			proto.proto.auth.Response.oneofGroups_[0],
		)
	);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.proto.auth.Response.prototype.toObject = function (
		opt_includeInstance,
	) {
		return proto.proto.auth.Response.toObject(opt_includeInstance, this);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.proto.auth.Response} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.proto.auth.Response.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				login:
					(f = msg.getLogin()) &&
					proto.proto.auth.LoginResponse.toObject(includeInstance, f),
				logout:
					(f = msg.getLogout()) &&
					proto.proto.auth.LogoutResponse.toObject(
						includeInstance,
						f,
					),
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary resourceGroupId (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.auth.Response}
 */
proto.proto.auth.Response.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.proto.auth.Response();
	return proto.proto.auth.Response.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary resourceGroupId (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.auth.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.auth.Response}
 */
proto.proto.auth.Response.deserializeBinaryFromReader = function (msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = new proto.proto.auth.LoginResponse();
				reader.readMessage(
					value,
					proto.proto.auth.LoginResponse.deserializeBinaryFromReader,
				);
				msg.setLogin(value);
				break;
			case 2:
				var value = new proto.proto.auth.LogoutResponse();
				reader.readMessage(
					value,
					proto.proto.auth.LogoutResponse.deserializeBinaryFromReader,
				);
				msg.setLogout(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary resourceGroupId (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.auth.Response.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.proto.auth.Response.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary resourceGroupId (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.auth.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.auth.Response.serializeBinaryToWriter = function (message, writer) {
	var f = undefined;
	f = message.getLogin();
	if (f != null) {
		writer.writeMessage(
			1,
			f,
			proto.proto.auth.LoginResponse.serializeBinaryToWriter,
		);
	}
	f = message.getLogout();
	if (f != null) {
		writer.writeMessage(
			2,
			f,
			proto.proto.auth.LogoutResponse.serializeBinaryToWriter,
		);
	}
};

/**
 * optional LoginResponse login = 1;
 * @return {?proto.proto.auth.LoginResponse}
 */
proto.proto.auth.Response.prototype.getLogin = function () {
	return /** @type{?proto.proto.auth.LoginResponse} */ (
		jspb.Message.getWrapperField(this, proto.proto.auth.LoginResponse, 1)
	);
};

/**
 * @param {?proto.proto.auth.LoginResponse|undefined} value
 * @return {!proto.proto.auth.Response} returns this
 */
proto.proto.auth.Response.prototype.setLogin = function (value) {
	return jspb.Message.setOneofWrapperField(
		this,
		1,
		proto.proto.auth.Response.oneofGroups_[0],
		value,
	);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.auth.Response} returns this
 */
proto.proto.auth.Response.prototype.clearLogin = function () {
	return this.setLogin(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.auth.Response.prototype.hasLogin = function () {
	return jspb.Message.getField(this, 1) != null;
};

/**
 * optional LogoutResponse logout = 2;
 * @return {?proto.proto.auth.LogoutResponse}
 */
proto.proto.auth.Response.prototype.getLogout = function () {
	return /** @type{?proto.proto.auth.LogoutResponse} */ (
		jspb.Message.getWrapperField(this, proto.proto.auth.LogoutResponse, 2)
	);
};

/**
 * @param {?proto.proto.auth.LogoutResponse|undefined} value
 * @return {!proto.proto.auth.Response} returns this
 */
proto.proto.auth.Response.prototype.setLogout = function (value) {
	return jspb.Message.setOneofWrapperField(
		this,
		2,
		proto.proto.auth.Response.oneofGroups_[0],
		value,
	);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.auth.Response} returns this
 */
proto.proto.auth.Response.prototype.clearLogout = function () {
	return this.setLogout(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.auth.Response.prototype.hasLogout = function () {
	return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.proto.auth.LoginResponse.prototype.toObject = function (
		opt_includeInstance,
	) {
		return proto.proto.auth.LoginResponse.toObject(
			opt_includeInstance,
			this,
		);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.proto.auth.LoginResponse} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.proto.auth.LoginResponse.toObject = function (includeInstance, msg) {
		var f,
			obj = {
				token: jspb.Message.getFieldWithDefault(msg, 1, ''),
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary resourceGroupId (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.auth.LoginResponse}
 */
proto.proto.auth.LoginResponse.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.proto.auth.LoginResponse();
	return proto.proto.auth.LoginResponse.deserializeBinaryFromReader(
		msg,
		reader,
	);
};

/**
 * Deserializes binary resourceGroupId (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.auth.LoginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.auth.LoginResponse}
 */
proto.proto.auth.LoginResponse.deserializeBinaryFromReader = function (
	msg,
	reader,
) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = /** @type {string} */ (reader.readString());
				msg.setToken(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary resourceGroupId (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.auth.LoginResponse.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.proto.auth.LoginResponse.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary resourceGroupId (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.auth.LoginResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.auth.LoginResponse.serializeBinaryToWriter = function (
	message,
	writer,
) {
	var f = undefined;
	f = message.getToken();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
};

/**
 * optional string token = 1;
 * @return {string}
 */
proto.proto.auth.LoginResponse.prototype.getToken = function () {
	return /** @type {string} */ (
		jspb.Message.getFieldWithDefault(this, 1, '')
	);
};

/**
 * @param {string} value
 * @return {!proto.proto.auth.LoginResponse} returns this
 */
proto.proto.auth.LoginResponse.prototype.setToken = function (value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
	 * Creates an object representation of this proto.
	 * Field names that are reserved in JavaScript and will be renamed to pb_name.
	 * Optional fields that are not set will be set to undefined.
	 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
	 * For the list of reserved names please see:
	 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
	 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
	 *     JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @return {!Object}
	 */
	proto.proto.auth.LogoutResponse.prototype.toObject = function (
		opt_includeInstance,
	) {
		return proto.proto.auth.LogoutResponse.toObject(
			opt_includeInstance,
			this,
		);
	};

	/**
	 * Static version of the {@see toObject} method.
	 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
	 *     the JSPB instance for transitional soy proto support:
	 *     http://goto/soy-param-migration
	 * @param {!proto.proto.auth.LogoutResponse} msg The msg instance to transform.
	 * @return {!Object}
	 * @suppress {unusedLocalVariables} f is only used for nested messages
	 */
	proto.proto.auth.LogoutResponse.toObject = function (includeInstance, msg) {
		var f,
			obj = {};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary resourceGroupId (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.auth.LogoutResponse}
 */
proto.proto.auth.LogoutResponse.deserializeBinary = function (bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.proto.auth.LogoutResponse();
	return proto.proto.auth.LogoutResponse.deserializeBinaryFromReader(
		msg,
		reader,
	);
};

/**
 * Deserializes binary resourceGroupId (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.auth.LogoutResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.auth.LogoutResponse}
 */
proto.proto.auth.LogoutResponse.deserializeBinaryFromReader = function (
	msg,
	reader,
) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary resourceGroupId (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.auth.LogoutResponse.prototype.serializeBinary = function () {
	var writer = new jspb.BinaryWriter();
	proto.proto.auth.LogoutResponse.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary resourceGroupId (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.auth.LogoutResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.auth.LogoutResponse.serializeBinaryToWriter = function (
	message,
	writer,
) {
	var f = undefined;
};

goog.object.extend(exports, proto.proto.auth);
